{"version":3,"file":"extension.js","mappings":"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","sources":["webpack://dwt-code-generator/./src/project.ts","webpack://dwt-code-generator/./src/utils.ts","webpack://dwt-code-generator/external commonjs \"vscode\"","webpack://dwt-code-generator/external node-commonjs \"fs\"","webpack://dwt-code-generator/external node-commonjs \"https\"","webpack://dwt-code-generator/external node-commonjs \"path\"","webpack://dwt-code-generator/webpack/bootstrap","webpack://dwt-code-generator/./src/extension.ts"],"sourcesContent":["import * as fs from 'fs';\r\nimport * as path from 'path';\r\nimport * as vscode from 'vscode';\r\nimport { Uri } from 'vscode';\r\nimport { copyFolder } from './utils';\r\n\r\nexport class ProjectManager {\r\n\r\n    async createProject() {\r\n        let src: string = path.join(__dirname, '../res/quickstart/');\r\n\r\n        // Select the project folder\r\n        const answer = await vscode.window.showQuickPick(['Yes', 'No'], { placeHolder: 'Do you want to create a new folder?' });\r\n        if (!answer) { return; }\r\n\r\n        let des: string = '';\r\n        if (answer === \"Yes\") {\r\n            des = await this.openFolder();\r\n            if (des !== '') {\r\n                copyFolder(src, des);\r\n            }\r\n        }\r\n        else {\r\n            let folders = vscode.workspace.workspaceFolders;\r\n            if (!folders) {\r\n                des = await this.openFolder();\r\n                if (des !== '') {\r\n                    copyFolder(src, des);\r\n                }\r\n            }\r\n            else {\r\n                des = folders[0].uri.fsPath;\r\n                vscode.window.showInformationMessage(folders[0].uri.fsPath);\r\n                copyFolder(src, des);\r\n            }\r\n        }\r\n    }\r\n\r\n    async openFolder() {\r\n        const projectName = await vscode.window.showInputBox({\r\n            prompt: 'Enter a name for the new project',\r\n            validateInput: (value: string): string => {\r\n                if (!value.length) {\r\n                    return 'A project name is required';\r\n                }\r\n                return '';\r\n            }\r\n        });\r\n        if (!projectName) {\r\n            return '';\r\n        }\r\n\r\n        let workspace = '';\r\n        const folderUris = await vscode.window.showOpenDialog({ canSelectFolders: true, canSelectFiles: false, canSelectMany: false, openLabel: 'Select folder' });\r\n        if (!folderUris) {\r\n            return '';\r\n        }\r\n\r\n        let workspaceFolderUri = folderUris[0];\r\n        workspace = workspaceFolderUri.fsPath;\r\n        let projectFolder = path.join(workspace, projectName);\r\n        if (!fs.existsSync(projectFolder)) {\r\n            fs.mkdirSync(projectFolder);\r\n        }\r\n\r\n        console.log(\"Open \" + projectFolder);\r\n        await vscode.commands.executeCommand(\"vscode.openFolder\", Uri.file(projectFolder), { forceNewWindow: true });\r\n\r\n        return projectFolder;\r\n    }\r\n}","import * as fs from 'fs';\r\nimport * as path from 'path';\r\nimport * as https from 'https';\r\nimport * as vscode from 'vscode';\r\n\r\nexport function copyFolder(src: string, des: string) {\r\n\tfs.readdir(src, (err, files) => {\r\n\t\tif (err) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tfiles.forEach(file => {\r\n\t\t\tlet srcFile = path.join(src, file);\r\n\t\t\tlet desFile = path.join(des, file);\r\n\t\t\tconsole.log(srcFile);\r\n\t\t\tconsole.log(desFile);\r\n\t\t\tif (fs.statSync(srcFile).isDirectory()) {\r\n\t\t\t\tfs.mkdirSync(desFile);\r\n\t\t\t\tcopyFolder(srcFile, desFile);\r\n\t\t\t} else {\r\n\t\t\t\tfs.copyFileSync(srcFile, desFile);\r\n\t\t\t}\r\n\t\t});\r\n\t});\r\n}\r\n\r\nexport async function httpsDownload(url: string, filename: string) {\r\n\tawait vscode.window.withProgress({\r\n\t\tlocation: vscode.ProgressLocation.Notification,\r\n\t\tcancellable: true\r\n\t}, (progress, token) => {\r\n\t\ttoken.onCancellationRequested(() => {\r\n\t\t\tconsole.log(\"User canceled the long running operation\");\r\n\t\t});\r\n\r\n\t\tprogress.report({ message: \"Downloading \" + filename });\r\n\r\n\t\treturn new Promise((resolve, reject) => {\r\n\t\t\tconst file = fs.createWriteStream(filename);\r\n\t\t\thttps.get(url, function (response: any) {\r\n\t\t\t\tresponse.pipe(file);\r\n\t\t\t\tfile.on(\"finish\", () => {\r\n\t\t\t\t\tfile.close();\r\n\t\t\t\t\tconsole.log(\"Download Completed\");\r\n\t\t\t\t\tresolve(\"Download Completed\");\r\n\t\t\t\t});\r\n\t\t\t});\r\n\r\n\t\t});\r\n\t});\r\n}","module.exports = require(\"vscode\");","module.exports = require(\"fs\");","module.exports = require(\"https\");","module.exports = require(\"path\");","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// The module 'vscode' contains the VS Code extensibility API\n// Import the module and reference it with the alias vscode in your code below\nimport * as vscode from 'vscode';\nimport { ProjectManager } from './project';\n\nconst projectManager = new ProjectManager();\n// This method is called when your extension is activated\n// Your extension is activated the very first time the command is executed\nexport function activate(context: vscode.ExtensionContext) {\n\n\tcontext.subscriptions.push(...[\n\t\tvscode.commands.registerCommand('dwt.quickstart', async () => {\n\t\t\tprojectManager.createProject();\n\t\t}),\n\t\tvscode.commands.registerCommand('dwt.doc', async () => {\n\t\t\tvscode.env.openExternal(vscode.Uri.parse('https://www.dynamsoft.com/web-twain/docs/info/api/'));\n\t\t}),\n\t\tvscode.commands.registerCommand('dwt.demo', async () => {\n\t\t\tvscode.env.openExternal(vscode.Uri.parse('https://demo.dynamsoft.com/web-twain/'));\n\t\t}),\n\t\tvscode.commands.registerCommand('dwt.about', async () => {\n\t\t\tvscode.env.openExternal(vscode.Uri.parse('https://www.dynamsoft.com/web-twain/overview/'));\n\t\t}),\n\t\tvscode.commands.registerCommand('dwt.license', async () => {\n\t\t\tvscode.env.openExternal(vscode.Uri.parse('https://www.dynamsoft.com/customer/license/trialLicense?product=dwt'));\n\t\t}),\n\t\tvscode.commands.registerCommand('dwt.samples', async () => {\n\t\t\tvscode.env.openExternal(vscode.Uri.parse('https://www.dynamsoft.com/web-twain/resources/code-gallery/'));\n\t\t}),\n\t]);\n}\n\n// This method is called when your extension is deactivated\nexport function deactivate() {}\n"],"names":["async","src","path","join","__dirname","answer","vscode","window","showQuickPick","placeHolder","des","this","openFolder","copyFolder","folders","workspace","workspaceFolders","uri","fsPath","showInformationMessage","projectName","showInputBox","prompt","validateInput","value","length","folderUris","showOpenDialog","canSelectFolders","canSelectFiles","canSelectMany","openLabel","projectFolder","fs","existsSync","mkdirSync","console","log","commands","executeCommand","Uri","file","forceNewWindow","readdir","err","files","forEach","srcFile","desFile","statSync","isDirectory","copyFileSync","url","filename","withProgress","location","ProgressLocation","Notification","cancellable","progress","token","onCancellationRequested","report","message","Promise","resolve","reject","createWriteStream","https","get","response","pipe","on","close","module","exports","require","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","__webpack_modules__","projectManager","ProjectManager","context","subscriptions","push","registerCommand","createProject","env","openExternal","parse"],"sourceRoot":""}